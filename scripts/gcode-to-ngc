#!/usr/bin/python
# -*- coding: utf-8 -*-

#    Copyright 2015 Alexander Roessler (mail AT roessler DOT systems)
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

import os
import sys
import argparse

replacements = [
    [" E", " A"],
    ["G10", "G22"],
    ["G11", "G23"]
    ]
unsupported = [
    "M82"
    ]
endCode = "M2"


def do_replacements(line):
    for replacement in replacements:
        line = line.replace(replacement[0], replacement[1])
    for code in unsupported:
        if code in line:
            line = ""
            break
    return line

def main():
    parser = argparse.ArgumentParser(description='This application converts RepRap flavour GCode to Machinekit flavour GCode')
    parser.add_argument('infile', nargs='?', type=argparse.FileType('r'), 
                        default=sys.stdin, help='input file, takes input from stdin if not specified')
    parser.add_argument('outfile', nargs='?', type=argparse.FileType('w'), 
                        default=sys.stdout, help='output file, prints output to stdout of not specified')
    parser.add_argument('-d', '--debug', help='enable debug mode', action='store_true')
    args = parser.parse_args()

    hasProgramEnd = False
    inFile = args.infile
    outFile = args.outfile

    for line in inFile:
        newline = do_replacements(line)
        outFile.write(newline)
        if (newline[:2] == "M2") or (newline[:1] == "%"):  # check for end of program
            hasProgramEnd = True
            
    if not hasProgramEnd:
        outFile.write(endCode + "\n")
        
    inFile.close()
    outFile.close()
    exit(0)
    
if __name__ == "__main__":
    main()